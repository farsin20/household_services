import React, { useState, useEffect, useContext } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { AuthContext } from '../Providers/AuthProvider';

const RequestsList = ({userEmail}) => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchRequests = async () => {
      if (!userEmail) {
        setLoading(false);
        return;
      }
      
      try {
        const res = await fetch(`http://localhost:5000/api/requests/${userEmail}`);
        const data = await res.json();
        if (data.success) {
          setRequests(data.requests);
          setError(null);
        } else {
          setError("Failed to fetch requests");
          console.error("Failed to fetch requests");
        }
      } catch (error) {
        setError("Error connecting to server");
        console.error("Error:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchRequests();
  }, [userEmail]);

  if (loading) {
    return <div className="text-emerald-400">Loading your requests...</div>;
  }

  if (error) {
    return <div className="text-red-500">{error}</div>;
  }

  return (
    <div>
      <h3 className="text-xl font-semibold mb-4 text-emerald-400">My Service Requests</h3>
      <div className="space-y-4">
        {requests.length > 0 ? (
          requests.map((request) => (
            <div key={request._id} className="bg-white p-4 rounded-lg shadow">
              <div className="text-black">
                <h4 className="font-semibold">{request.serviceType}</h4>
                <p className="text-sm text-gray-600">Status: {request.status}</p>
                <p className="text-sm text-gray-600">Date: {new Date(request.createdAt).toLocaleDateString()}</p>
                {request.assignedWorker && (
                  <p className="text-sm text-gray-600">Worker: {request.assignedWorker}</p>
                )}
              </div>
            </div>
          ))
        ) : (
          <p className="text-emerald-400">No service requests found.</p>
        )}
      </div>
    </div>
  );
};

const MakePayment = ({userEmail}) => {
  return (
    <div className="text-emerald-400">
      Payment feature coming soon...
    </div>
  );
};

const ReviewService = ({userEmail}) => {
  return (
    <div className="text-emerald-400">
      Review feature coming soon...
    </div>
  );
};

const CustomerDashboard = () => {
  const [activeTab, setActiveTab] = useState('requests');
  const { user, role } = useContext(AuthContext);
  const navigate = useNavigate();
  const userEmail = user?.email;

  useEffect(() => {
    if (!user || role !== 'customer') {
      navigate('/login');
    }
  }, [user, role, navigate]);

  return (
    <div className="min-h-screen bg-gray-700 p-6">
      <h1 className="text-3xl font-bold text-center mb-6 text-emerald-500">Customer Dashboard</h1>

      <div className="flex justify-center mb-4 space-x-4 text-emerald-500">
        <button 
          onClick={() => setActiveTab('requests')} 
          className={`btn-tab ${activeTab === 'requests' ? 'bg-emerald-500 text-white' : 'bg-white'} rounded p-4`}
        >
          My Requests
        </button>
        <button 
          onClick={() => setActiveTab('payment')} 
          className={`btn-tab ${activeTab === 'payment' ? 'bg-emerald-500 text-white' : 'bg-white'} rounded p-4`}
        >
          Make Payment
        </button>
        <button 
          onClick={() => setActiveTab('review')} 
          className={`btn-tab ${activeTab === 'review' ? 'bg-emerald-500 text-white' : 'bg-white'} rounded p-4`}
        >
          Review Service
        </button>
        <Link to='/request-services'>
          <button className="btn-tab bg-white rounded p-4">New Request</button>
        </Link>
      </div>

      <div className="bg-transparent shadow-xl rounded p-6">
        {activeTab === 'requests' && <RequestsList userEmail={userEmail} />}
        {activeTab === 'payment' && <MakePayment userEmail={userEmail} />}
        {activeTab === 'review' && <ReviewService userEmail={userEmail} />}
      </div>
    </div>
  );
};

export default CustomerDashboard;
